# 애플리케이션 이름 설정
spring.application.name=Travel

# ========== MySQL 데이터베이스 연결 설정 ==========
# 데이터베이스 URL: MySQL 서버 주소, 포트, 데이터베이스명 및 추가 옵션을 지정합니다.
# useSSL=false: SSL 연결을 사용하지 않습니다.
# serverTimezone=UTC: 시간대를 UTC로 설정합니다.
# allowPublicKeyRetrieval=true: 공개 키 검색을 허용합니다.
spring.datasource.url=jdbc:mysql://localhost:3306/travel_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&characterEncoding=UTF-8

# 데이터베이스 접속 계정
spring.datasource.username=test

# 데이터베이스 접속 비밀번호
spring.datasource.password=Test12#$

# MySQL JDBC 드라이버 클래스명
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ========== JPA 및 Hibernate 설정 ==========
# JPA가 데이터베이스 스키마를 처리하는 방법 설정
# update: 기존 테이블은 유지하고 새로운 엔티티에 대한 테이블만 생성
spring.jpa.hibernate.ddl-auto=update

# SQL 쿼리 출력 여부
spring.jpa.show-sql=true

# SQL 쿼리를 보기 좋게 포맷팅
spring.jpa.properties.hibernate.format_sql=true

# 사용할 데이터베이스 방언(Dialect) 설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# ========== 데이터베이스 로깅 설정 ==========
# 실행되는 SQL 쿼리 로깅 레벨 설정
# DEBUG 레벨로 설정하면 실행되는 모든 SQL 쿼리가 로그에 출력됩니다.
logging.level.org.hibernate.SQL=DEBUG

# SQL 쿼리에 바인딩되는 파라미터 로깅 레벨 설정
# TRACE 레벨로 설정하면 SQL 쿼리에 바인딩되는 모든 파라미터가 로그에 출력됩니다.
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ========== Swagger(OpenAPI) 문서화 설정 ==========
# OpenAPI 문서 엔드포인트 경로 설정
springdoc.api-docs.path=/api-docs

# Swagger UI 엔드포인트 경로 설정
springdoc.swagger-ui.path=/swagger-ui.html

# 작업별로 정렬하는 방식 설정 (method: HTTP 메소드별 정렬)
springdoc.swagger-ui.operations-sorter=method

# 태그별로 정렬하는 방식 설정 (alpha: 알파벳 순 정렬)
springdoc.swagger-ui.tags-sorter=alpha

# 기본 요청 미디어 타입 설정
springdoc.default-consumes-media-type=application/json

# 기본 응답 미디어 타입 설정
springdoc.default-produces-media-type=application/json

# 서버 인코딩 설정
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# ========== JWT 설정 ==========
# JWT 서명에 사용되는 비밀 키 (실제 환경에서는 환경 변수 등으로 관리해야 함)
jwt.secret=ThisIsSecretForJWTHS512SignatureAlgorithmThatMUSTHave64ByteLength

# JWT 액세스 토큰 만료 시간 (초, 기본값: 24시간)
jwt.expiration=86400

# JWT 리프레시 토큰 만료 시간 (초, 기본값: 7일)
jwt.refresh-expiration=604800

# ========== OAuth2 설정 ==========
# Google OAuth2 설정
spring.security.oauth2.client.registration.google.client-id=your-google-client-id
spring.security.oauth2.client.registration.google.client-secret=your-google-client-secret
spring.security.oauth2.client.registration.google.scope=profile,email

# Naver OAuth2 설정
spring.security.oauth2.client.registration.naver.client-id=your-naver-client-id
spring.security.oauth2.client.registration.naver.client-secret=your-naver-client-secret
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Kakao OAuth2 설정
spring.security.oauth2.client.registration.kakao.client-id=your-kakao-client-id
spring.security.oauth2.client.registration.kakao.client-secret=your-kakao-client-secret
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id